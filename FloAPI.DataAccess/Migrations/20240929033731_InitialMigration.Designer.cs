// <auto-generated />
using System;
using FloAPI.DataAccess.DataContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FloAPI.DataAccess.Migrations
{
    [DbContext(typeof(FloApiDataContext))]
    [Migration("20240929033731_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FloAPI.DataAccess.Entities.Barcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<int?>("MaterialId")
                        .HasColumnType("integer")
                        .HasColumnName("material_id");

                    b.Property<int>("NumberOfDecrease")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_decrease");

                    b.Property<long>("Value")
                        .HasMaxLength(16)
                        .HasColumnType("bigint")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("barcodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaterialId = 1,
                            NumberOfDecrease = 1,
                            Value = 1000000000000000L
                        },
                        new
                        {
                            Id = 2,
                            MaterialId = 2,
                            NumberOfDecrease = 1,
                            Value = 1000000000000001L
                        },
                        new
                        {
                            Id = 3,
                            MaterialId = 3,
                            NumberOfDecrease = 1,
                            Value = 1000000000000002L
                        },
                        new
                        {
                            Id = 4,
                            MaterialId = 4,
                            NumberOfDecrease = 1,
                            Value = 1000000000000003L
                        },
                        new
                        {
                            Id = 5,
                            MaterialId = 5,
                            NumberOfDecrease = 1,
                            Value = 1000000000000004L
                        },
                        new
                        {
                            Id = 6,
                            MaterialId = 5,
                            NumberOfDecrease = 5,
                            Value = 1000000000000005L
                        });
                });

            modelBuilder.Entity("FloAPI.DataAccess.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<int?>("BarcodeId")
                        .HasColumnType("integer");

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<int?>("RecordId")
                        .HasColumnType("integer");

                    b.Property<int>("ThresholdLimit")
                        .HasColumnType("integer")
                        .HasColumnName("threshold_limit");

                    b.HasKey("Id");

                    b.HasIndex("BarcodeId");

                    b.HasIndex("RecordId");

                    b.ToTable("materials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Count = 85,
                            Name = "Leather",
                            ThresholdLimit = 10
                        },
                        new
                        {
                            Id = 2,
                            Count = 40,
                            Name = "Rubber",
                            ThresholdLimit = 10
                        },
                        new
                        {
                            Id = 3,
                            Count = 30,
                            Name = "Textiles",
                            ThresholdLimit = 10
                        },
                        new
                        {
                            Id = 4,
                            Count = 35,
                            Name = "Synthetics",
                            ThresholdLimit = 10
                        },
                        new
                        {
                            Id = 5,
                            Count = 35,
                            Name = "Foam",
                            ThresholdLimit = 10
                        });
                });

            modelBuilder.Entity("FloAPI.DataAccess.Entities.Record", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("integer")
                        .HasColumnName("material_id");

                    b.Property<bool>("OperationType")
                        .HasColumnType("boolean")
                        .HasColumnName("operation_type");

                    b.HasKey("Id");

                    b.ToTable("records");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Count = 120,
                            Date = new DateTime(2024, 9, 29, 3, 37, 30, 799, DateTimeKind.Utc).AddTicks(7277),
                            MaterialId = 1,
                            OperationType = true
                        },
                        new
                        {
                            Id = 2,
                            Count = 30,
                            Date = new DateTime(2024, 9, 29, 3, 37, 30, 799, DateTimeKind.Utc).AddTicks(7280),
                            MaterialId = 1,
                            OperationType = false
                        },
                        new
                        {
                            Id = 3,
                            Count = 10,
                            Date = new DateTime(2024, 9, 29, 3, 37, 30, 799, DateTimeKind.Utc).AddTicks(7281),
                            MaterialId = 1,
                            OperationType = false
                        },
                        new
                        {
                            Id = 4,
                            Count = 5,
                            Date = new DateTime(2024, 9, 29, 3, 37, 30, 799, DateTimeKind.Utc).AddTicks(7282),
                            MaterialId = 1,
                            OperationType = true
                        },
                        new
                        {
                            Id = 5,
                            Count = 40,
                            Date = new DateTime(2024, 9, 29, 3, 37, 30, 799, DateTimeKind.Utc).AddTicks(7283),
                            MaterialId = 2,
                            OperationType = true
                        },
                        new
                        {
                            Id = 6,
                            Count = 55,
                            Date = new DateTime(2024, 9, 29, 3, 37, 30, 799, DateTimeKind.Utc).AddTicks(7284),
                            MaterialId = 3,
                            OperationType = true
                        },
                        new
                        {
                            Id = 7,
                            Count = 25,
                            Date = new DateTime(2024, 9, 29, 3, 37, 30, 799, DateTimeKind.Utc).AddTicks(7285),
                            MaterialId = 3,
                            OperationType = false
                        },
                        new
                        {
                            Id = 8,
                            Count = 55,
                            Date = new DateTime(2024, 9, 29, 3, 37, 30, 799, DateTimeKind.Utc).AddTicks(7286),
                            MaterialId = 4,
                            OperationType = true
                        },
                        new
                        {
                            Id = 9,
                            Count = 15,
                            Date = new DateTime(2024, 9, 29, 3, 37, 30, 799, DateTimeKind.Utc).AddTicks(7286),
                            MaterialId = 4,
                            OperationType = true
                        },
                        new
                        {
                            Id = 10,
                            Count = 25,
                            Date = new DateTime(2024, 9, 29, 3, 37, 30, 799, DateTimeKind.Utc).AddTicks(7287),
                            MaterialId = 4,
                            OperationType = false
                        },
                        new
                        {
                            Id = 11,
                            Count = 35,
                            Date = new DateTime(2024, 9, 29, 3, 37, 30, 799, DateTimeKind.Utc).AddTicks(7288),
                            MaterialId = 5,
                            OperationType = true
                        });
                });

            modelBuilder.Entity("FloAPI.DataAccess.Entities.Material", b =>
                {
                    b.HasOne("FloAPI.DataAccess.Entities.Barcode", "Barcode")
                        .WithMany("Materials")
                        .HasForeignKey("BarcodeId")
                        .OnDelete(DeleteBehavior.ClientNoAction);

                    b.HasOne("FloAPI.DataAccess.Entities.Record", "Record")
                        .WithMany("Materials")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.ClientNoAction);

                    b.Navigation("Barcode");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("FloAPI.DataAccess.Entities.Barcode", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("FloAPI.DataAccess.Entities.Record", b =>
                {
                    b.Navigation("Materials");
                });
#pragma warning restore 612, 618
        }
    }
}
